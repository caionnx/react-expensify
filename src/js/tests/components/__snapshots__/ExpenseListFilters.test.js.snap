// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseListFilters correctly 1`] = `
<div
  className="content-container"
>
  <div
    className="input-group"
  >
    <div
      className="input-group__item"
    >
      <input
        className="text-input"
        onChange={[Function]}
        placeholder="Search expenses"
        type="text"
        value=""
      />
    </div>
    <div
      className="input-group__item"
    >
      <Connect(ExpensesCategorySelect)
        defaultText="All categories"
        defaultValue=""
        onChange={[Function]}
      />
    </div>
    <div
      className="input-group__item"
    >
      <select
        className="select"
        onChange={[Function]}
        value="date"
      >
        <option
          value="date"
        >
          Date
        </option>
        <option
          value="amount"
        >
          Amount
        </option>
      </select>
    </div>
    <div
      className="DayPickerContainer"
    >
      <DayPickerInput
        classNames={
          Object {
            "container": "DayPickerInput",
            "overlay": "DayPickerInput-Overlay",
            "overlayWrapper": "DayPickerInput-OverlayWrapper",
          }
        }
        clickUnselectsDay={false}
        component="input"
        dayPickerProps={
          Object {
            "disabledDays": Object {
              "after": undefined,
            },
            "modifiers": Object {
              "end": undefined,
              "start": undefined,
            },
            "numberOfMonths": 1,
            "onDayClick": [Function],
            "selectedDays": Array [
              undefined,
              Object {
                "from": undefined,
                "to": undefined,
              },
            ],
            "toMonth": undefined,
          }
        }
        format="L"
        formatDate={[Function]}
        hideOnDayClick={true}
        inputProps={Object {}}
        keepFocus={true}
        onDayChange={[Function]}
        overlayComponent={[Function]}
        parseDate={[Function]}
        placeholder="Start Date"
        showOverlay={false}
        value=""
      />
      <DayPickerInput
        classNames={
          Object {
            "container": "DayPickerInput",
            "overlay": "DayPickerInput-Overlay",
            "overlayWrapper": "DayPickerInput-OverlayWrapper",
          }
        }
        clickUnselectsDay={false}
        component="input"
        dayPickerProps={
          Object {
            "disabledDays": Object {
              "before": undefined,
            },
            "fromMonth": undefined,
            "modifiers": Object {
              "end": undefined,
              "start": undefined,
            },
            "month": undefined,
            "numberOfMonths": 1,
            "selectedDays": Array [
              undefined,
              Object {
                "from": undefined,
                "to": undefined,
              },
            ],
          }
        }
        format="L"
        formatDate={[Function]}
        hideOnDayClick={true}
        inputProps={Object {}}
        keepFocus={true}
        onDayChange={[Function]}
        overlayComponent={[Function]}
        parseDate={[Function]}
        placeholder="End Date"
        showOverlay={false}
        value=""
      />
      <button
        aria-label="Clear Dates"
        className=""
        onClick={[Function]}
        type="button"
      >
        <svg
          className="icon"
          height="12"
          viewBox="0 0 12 12"
          width="12"
        >
          <path
            d="M11.53.47a.75.75 0 0 0-1.061 0l-4.47 4.47L1.529.47A.75.75 0 1 0 .468 1.531l4.47 4.47-4.47 4.47a.75.75 0 1 0 1.061 1.061l4.47-4.47 4.47 4.47a.75.75 0 1 0 1.061-1.061l-4.47-4.47 4.47-4.47a.75.75 0 0 0 0-1.061z"
            fillRule="evenodd"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`should render ExpenseListFilters with alt data correctly 1`] = `
<div
  className="content-container"
>
  <div
    className="input-group"
  >
    <div
      className="input-group__item"
    >
      <input
        className="text-input"
        onChange={[Function]}
        placeholder="Search expenses"
        type="text"
        value="bills"
      />
    </div>
    <div
      className="input-group__item"
    >
      <Connect(ExpensesCategorySelect)
        defaultText="All categories"
        defaultValue=""
        onChange={[Function]}
      />
    </div>
    <div
      className="input-group__item"
    >
      <select
        className="select"
        onChange={[Function]}
        value="amount"
      >
        <option
          value="date"
        >
          Date
        </option>
        <option
          value="amount"
        >
          Amount
        </option>
      </select>
    </div>
    <div
      className="DayPickerContainer"
    >
      <DayPickerInput
        classNames={
          Object {
            "container": "DayPickerInput",
            "overlay": "DayPickerInput-Overlay",
            "overlayWrapper": "DayPickerInput-OverlayWrapper",
          }
        }
        clickUnselectsDay={false}
        component="input"
        dayPickerProps={
          Object {
            "disabledDays": Object {
              "after": "1970-01-04T00:00:00.000Z",
            },
            "modifiers": Object {
              "end": "1970-01-04T00:00:00.000Z",
              "start": "1970-01-01T00:00:00.000Z",
            },
            "numberOfMonths": 1,
            "onDayClick": [Function],
            "selectedDays": Array [
              "1970-01-01T00:00:00.000Z",
              Object {
                "from": "1970-01-01T00:00:00.000Z",
                "to": "1970-01-04T00:00:00.000Z",
              },
            ],
            "toMonth": "1970-01-04T00:00:00.000Z",
          }
        }
        format="L"
        formatDate={[Function]}
        hideOnDayClick={true}
        inputProps={Object {}}
        keepFocus={true}
        onDayChange={[Function]}
        overlayComponent={[Function]}
        parseDate={[Function]}
        placeholder="Start Date"
        showOverlay={false}
        value="1970-01-01T00:00:00.000Z"
      />
      <DayPickerInput
        classNames={
          Object {
            "container": "DayPickerInput",
            "overlay": "DayPickerInput-Overlay",
            "overlayWrapper": "DayPickerInput-OverlayWrapper",
          }
        }
        clickUnselectsDay={false}
        component="input"
        dayPickerProps={
          Object {
            "disabledDays": Object {
              "before": "1970-01-01T00:00:00.000Z",
            },
            "fromMonth": "1970-01-01T00:00:00.000Z",
            "modifiers": Object {
              "end": "1970-01-04T00:00:00.000Z",
              "start": "1970-01-01T00:00:00.000Z",
            },
            "month": "1970-01-01T00:00:00.000Z",
            "numberOfMonths": 1,
            "selectedDays": Array [
              "1970-01-01T00:00:00.000Z",
              Object {
                "from": "1970-01-01T00:00:00.000Z",
                "to": "1970-01-04T00:00:00.000Z",
              },
            ],
          }
        }
        format="L"
        formatDate={[Function]}
        hideOnDayClick={true}
        inputProps={Object {}}
        keepFocus={true}
        onDayChange={[Function]}
        overlayComponent={[Function]}
        parseDate={[Function]}
        placeholder="End Date"
        showOverlay={false}
        value="1970-01-04T00:00:00.000Z"
      />
      <button
        aria-label="Clear Dates"
        className=""
        onClick={[Function]}
        type="button"
      >
        <svg
          className="icon"
          height="12"
          viewBox="0 0 12 12"
          width="12"
        >
          <path
            d="M11.53.47a.75.75 0 0 0-1.061 0l-4.47 4.47L1.529.47A.75.75 0 1 0 .468 1.531l4.47 4.47-4.47 4.47a.75.75 0 1 0 1.061 1.061l4.47-4.47 4.47 4.47a.75.75 0 1 0 1.061-1.061l-4.47-4.47 4.47-4.47a.75.75 0 0 0 0-1.061z"
            fillRule="evenodd"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;
